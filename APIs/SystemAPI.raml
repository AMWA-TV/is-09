#%RAML 1.0

# AMWA NMOS System API
# (c) AMWA 2018

title: System
baseUri: http://example.api.com/x-nmos/system/{version}
version: v1.0
mediaType: application/json

documentation:
  - title: Overview
    content: |
      The System API allows Nodes to obtain information that is common across a system
  - title: DNS-SD Advertisement
    content: |
      System APIs MUST produce an mDNS advertisement of the type \_nmos-system.\_tcp. This MAY be accompanied by a unicast DNS announcement of the same type.

      The IP address and port of the System API MUST be identified via the DNS-SD advertisement, with the full HTTP path then being resolved via the standard NMOS API path documentation.

      Multiple DNS-SD advertisements for the same API are permitted where the API is exposed via multiple ports and/or protocols.

  - title: DNS-SD TXT Records
    content: |
      **api\_proto**

      The DNS-SD advertisement MUST be accompanied by a TXT record of name 'api\_proto' with a value of either 'http' or 'https' dependent on the protocol in use by the System API web server.

      **api\_ver**

      The DNS-SD advertisement MUST be accompanied by a TXT record of name 'api\_ver'. The value of this TXT record is a comma separated list of API versions supported by the server. For example: 'v1.0,v1.1,v2.0'. There should be no whitespace between commas, and versions should be listed in ascending order.

      **pri**

      The DNS-SD advertisement MUST include a TXT record with key 'pri' and an integer value. Servers MAY additionally represent a matching priority via the DNS-SD SRV record 'priority' and 'weight' as defined in RFC 2782. The TXT record should be used in favour to the SRV priority and weight where these values differ in order to overcome issues in the Bonjour and Avahi implementations.
      Values 0 to 99 correspond to an active NMOS System API (zero being the highest priority). Values 100+ are reserved for development work to avoid colliding with a live system.
/:
  displayName: Base
  get:
    description: List of resources available.
    responses:
      200:
        body:
          example: !include ../examples/base-get-200.json
          type: !include schemas/base.json
/global:
  displayName: Global configuration resource
  get:
    description: Global configuration parameters
    responses:
      200:
        body:
          example: !include ../examples/global-get-200.json
          type: !include schemas/global.json
